"DSMC WWW Site"_dws - "DSMC Documentation"_dd - "DSMC Commands"_dc :c

:link(dws,http://dsmc.sandia.gov)
:link(dd,Manual.html)
:link(dc,Section_commands.html#comm)

:line

create_particles command :h3

[Syntax:]

create_particles mix-ID keyword value ... :pre

mix-ID = ID of mixture to use when creating particles :ulb,l
zero or more keyword/value pairs may be appended :l
keyword = {n} or {loop} :l
  {n} value = Np = number of particles to create
  {loop} value = {all} or {local} :pre
:ule

[Examples:]

create_particles background
create_particles air n 100000 loop local :pre

[Description:]

Create or add additional particles to the simulation domain.  The
number of particles created and their individual attributes, such
species and velocity, are determined by the mixture attributes, as
specied by the {mix-ID}.  See the "mixture"_mixture.html command for
more details.

Unless the {n} keyword is used, the number of particles created is a
function of the global {Fnum} value, the mixture number density, and
the volume of the simulation domain.  The {Fnum} value is set by the
"global fnum"_global.html command.  The mixture {nrho} is set by the
"mixture"_mixture.html command.  The volume of the simulation
is set by the "create_box"_create_box.html command.

Based on these settings, each grid cell will have a target number of
particles {M} to insert.  If {M} has a fractional value, e.g. 12.5,
then 12 particles will be inserted, and a 13th depending on the
outcome of a random number generation.  Each particle will be inserted
at a random location within the grid cell.  The particle species will
be chosen randomly in accord with the {frac} settings of the
collection of species in the mixture, as set by the
"mixture"_mixture.html command.  The velocity of the particle
will be set to the sum of the streaming velocity and a thermal
velocity sampled from the thermal temperature of the species.
Both the streaming velocity and thermal temperature are also
set by the "mixture"_mixture.html command.

If the {n} keyword is used, than the {Fnum} and {nrho} settings are
ignored and {Np} total particles are created.  This can be useful for
debugging purposes.  See the discussion of the {loop} keyword below
for how particle positions are assigned.  The assignment of species
and velocity to each particles is done the same as described above.

The {loop} keyword only applies when the {n} keyword is also used, and
controls how the particles are generated in parallel.

If the setting is {all}, then every processor loops over all {N}
particles.  As the coordinates of each is created, each processor
checks what grid cell it is in, and only stores the particle if it
owns that grid cell.  Thus an identical set of particles are created,
no matter how many processors are running the simulation

If the setting is {local}, then each of the {P} processors generates a
{N/P} subset of particles, using its own random number generation.  It
only adds particles to grid cells that it owns.  This is a faster way
to generate a large number of particles, but means that the individual
attributes of particles will depend on the number of processors and
the mapping of grid cells to procesors.  Statistically, the overall
set of created particles should be the same as with the {all} setting.

[Restrictions:] none

[Related commands:]

"mixture"_mixture.html

[Default:]

The keyword defaults are loop = all.
