"SPARTA WWW Site"_sws - "SPARTA Documentation"_sd - "SPARTA Commands"_sc :c

:link(sws,http://dsmc.sandia.gov)
:link(sd,Manual.html)
:link(sc,Section_commands.html#comm)

:line

balance_grid command :h3

[Syntax:]

balance_grid keyword args ... :pre

keyword = {stride} or {clump} or {block} or {random} or {proc} or {rcb} :ulb,l
  {stride} args = {xyz} or {xzy} or {yxz} or {yzx} or {zxy} or {zyx}
  {clump} args = {xyz} or {xzy} or {yxz} or {yzx} or {zxy} or {zyx}
  {block} args = Px Py Pz
    Px,Py,Pz = # of processors in each dimension
  {random} args = none 
  {proc} args = none
  {rcb} args = weight
    weight = {cell} or {mol} :pre
:ule

[Examples:]

balance_grid block * * *
balance_grid block * 4 *
balance_grid clump yxz
balance_grid random
balance_grid rcb mol :pre

[Description:]

This command adjusts the assignment of grid cells and their particles
to processors, to attempt to balance the computational cost (load)
evenly across processors.  The load balancing is "static" in the sense
that this command performs the balancing once, before or between
simulations. The assignments will then remain static during the
subsequent run.  To perform "dynamic" balancing, see the "fix
balance"_fix_balance.html command, which can adjust the assignemt of
grid cells to processors on-the-fly during a run.

After grid cells have been assigned, they are migrated to new owning
processors, along with any particles they own or other per-cell
attributes stored by fixes.  The internal data structures within
SPPARKS for grid cells and particles are re-initialized with the new
decomposition.

This command is useful to use immediately after the grid is created,
via the "create_grid"_create_grid.html command, to partition the grid
in a more desirable manner than the default creation allows for.

It is also useful to use once molecules have been created, or a
simulation has come to equilibrium with a spatially varying molecule
distribution, so that the computational load can be more evenly
balanced across processors.

:line

The {stride}, {clump}, and {block} keywords can only be used if the
grid is "uniform".  The grid in SPARTA is hierarchical with one or
more levels, as defined by the "create_grid"_create_grid.html or
"read_grid"_read_grid.html commands.  If the parent cell of every grid
cell is at the same level of the hierarchy, then the grid is uniform,
meaning the collection of grid cells effectively form a uniform fine
grid overlaying the entire simulation domain.

The meaning of the {stride}, {clump}, and {block} keywords is exactly
the same as when they are used with the "create_grid"_create_grid.html
command.  See its doc page for details.

The {random} keyword means that each grid cell will be assigned
randomly to one of the processors.  Note that in this case every
processor will typically not be assigned exactly the same number of
cells.

The {proc} keyword means that each processor will choose a random
processor to assign its first grid cell to.  It will then loop over
its grid cells and assign each to consecutive processors, wrapping
around the collection of processors if necessary.  Note that in this
case every processor will typically not be assigned exactly the same
number of cells.

The {rcb} keyword uses a recurvise coordinate bisectioning (RCB)
algorithm to assign spatially-compact clumps of grid cells to
processors.  Each grid cell has a "weight" in this algorithm so that
eacn processor is assigned an equal total weight of grid cells, as
nearly as possible.  If the {weight} argument is specified as {cell},
than the weight for each grid cell is 1.0, so that each processor will
end up with an equal number of grid cells.  If the {weight} argument
is specified as {mol}, than the weight for each grid cell is the
number of molecules it currently owns, so that each processor will end
up with an equal number of molecules.

Here are 2 example pictures, for a 2d simulation, of the partioning
provided by the RCB algorithm for a simulation on P processors of
100x100 or 10000 grid cells.  The one on the left is for an initially
uniform distribution of particles.  The one on the right is at a later
time when the particle density is larger on the right side of the
simulation box.

NOTE: include images

[Restrictions:]

This command can only be used after the grid has been created by the
"create_grid"_create_grid.html command.

This command also initializes various options in SPARTA before
performing the balancing.  This is so that grid cells are ready to
migrate to new processors.  Thus is you get an error like a simulation
box boundary condition has not been assigned, you will need to do that
operation in your input script before balancing can be performed.

[Related commands:]

"create_grid"_create_grid.html, "fix balance"_fix_balance.html

[Default:] none
