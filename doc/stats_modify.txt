"SPARTA WWW Site"_dws - "SPARTA Documentation"_dd - "SPARTA Commands"_dc :c

:link(dws,http://dsmc.sandia.gov)
:link(dd,Manual.html)
:link(dc,Section_commands.html#comm)

:line

stats_modify command :h3

[Syntax:]

stats_modify keyword value ... :pre

one or more keyword/value pairs may be listed :ulb,l
keyword = {flush} or {format} or {every} :l
  {flush} value = {yes} or {no}
  {format} values = {int} string or {float} string or M string
    M = integer from 1 to N, where N = # of quantities being printed
    string = C-style format string
  {every} value = v_name
    v_name = an equal-style variable name :pre
:ule

[Examples:]

stats_modify flush yes
stats_modify temp myTemp format 3 %15.8g
stats_modify line multi format float %g :pre

[Description:]

Set options for how statistical information is computed and printed by
SPARTA.

The {flush} keyword invokes a flush operation after statistical info
is written to the log file.  This insures the output in that file is
current (no buffering by the OS), even if SPARTA halts before the
simulation completes.

The {format} keyword sets the numeric format of individual printed
quantities.  The {int} and {float} keywords set the format for all
integer or floating-point quantities printed.  The setting with a
numeric value M (e.g. format 5 %10.4g) sets the format of the Mth
value printed in each output line, e.g. the 5th column of output in
this case.  If the format for a specific column has been set, it will
take precedent over the {int} or {float} setting.

IMPORTANT NOTE: The statistical output values {step} and {npart} are
stored internally as 8-byte signed integers, rather than the usual
4-byte signed integers.  When specifying the "format int" keyword you
can use a "%d"-style format identifier in the format string and SPARTA
will convert this to the corresponding "%lu" form when it is applied
to those keywords.  However, when specifying the "format M string"
keyword for {step} and {natoms}, you should specify a string
appropriate for an 8-byte signed integer, e.g. one with "%ld".

The {every} keyword allows a variable to be specified which will
determine which timesteps statistical output is generated.  It must be
an "equal-style variable"_variable.html, and is specified as v_name,
where name is the variable name.  The variable is evaluated at the
beginning of a run to determine the next timestep at which a dump
snapshot will be written out.  On that timestep, the variable will be
evaluated again to determine the next timestep, etc.  Thus the
variable should return timestep values.  See the stagger() and
logfreq() math functions for "equal-style variables"_variable.html, as
examples of useful functions to use in this context.  Other similar
math functions could easily be added as options for "equal-style
variables"_variable.html.  In addition, statistical output will always
occur on the first and last timestep of each run.

For example, the following commands will output statistical info at
timesteps 0,10,20,30,100,200,300,1000,2000,etc:

variable	s equal logfreq(10,3,10)
stats_modify	1 every v_s :pre

Note that the {every} keyword overrides the output frequency setting
made by the "stats"_stats.html command, by setting it to 0.  If the
"stats"_stats.html command is later used to set the output frequency
to a non-zero value, then the var,iable setting of the stats_modify
every command will be overridden.

[Restrictions:] none

[Related commands:]

"stats"_stats.html, "stats_style"_stats_style.html

[Default:]

The option defaults are flush = no, format int = "%8d", format float =
"%12.8g", and every = non-variable setting provided by the
"stats"_stats.html command.
