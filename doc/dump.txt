"DSMC WWW Site"_dws - "DSMC Documentation"_dd - "DSMC Commands"_dc :c

:link(dws,http://dsmc.sandia.gov)
:link(dd,Manual.html)
:link(dc,Section_commands.html#comm)

:line
   
dump command :h3
"dump image"_dump_image.html command :h3

[Syntax:]

dump ID style N file args :pre

ID = user-assigned name for the dump :ulb,l
style = {particle} or {image} :l
N = dump every this many timesteps :l
file = name of file to write dump info to :l
args = list of arguments for a particular style :l
  {image} args = discussed on "dump image"_dump_image.html doc page
  {custom} args = list of atom attributes
    possible attributes = id, type, x, y, z, xs, ys, zs, vx, vy, vz :pre

      id = particle ID
      type = particle species
      x,y,z = unscaled particle coordinates
      xs,ys,zs = scaled particle coordinates
      vx,vy,vz = atom velocities :pre

:ule

[Examples:]

dump myDump all atom 100 dump.atom
dump 2 subgroup atom 50 dump.run.bin
dump 4a all custom 100 dump.myforce.* id type x y vx fx
dump 4b flow custom 100 dump.%.myforce id type c_myF\[3\] v_ke
dump 2 inner cfg 10 dump.snap.*.cfg id type xs ys zs vx vy vz
dump snap all cfg 100 dump.config.*.cfg id type xs ys zs id type c_Stress[2]
dump 1 all xtc 1000 file.xtc
dump e_data all custom 100 dump.eff id type x y z spin eradius fx fy fz eforce :pre

[Description:]

Dump a snapshot of simulation quantities to one or more files every N
timesteps in one of several styles.  The {image} style is the
exception; it creates a JPG or PPM image file of the simulation
configuration every N timesteps, as discussed on the "dump
image"_dump_image.html doc page.

Only information for atoms in the specified group is dumped.  The
"dump_modify thresh and region"_dump_modify.html commands can also
alter what atoms are included.  Not all styles support all these
options; see details below.

As described below, the filename determines the kind of output (text
or binary or gzipped, one big file or one per timestep, one big file
or one per processor).

:line

The {style} keyword determines what quantities are written to the file
and in what format.  Settings made via the
"dump_modify"_dump_modify.html command can also alter the format of
individual values and the file itself.

The {particle} style create files in a simple text format that is
self-explanatory when viewing a dump file.  Many of the DSMC
"post-processing tools"_Section_tools.html, including
"Pizza.py"_http://www.sandia.gov/~sjplimp/pizza.html, work with this
format.

For post-processing purposes the {particle} text files are
self-describing in the following sense.

The dimensions of the simulation box are included in each snapshot.
This information is is formatted as:

ITEM: BOX BOUNDS xx yy zz
xlo xhi
ylo yhi
zlo zhi :pre

where xlo,xhi are the maximum extents of the simulation box in the
x-dimension, and similarly for y and z.  The "xx yy zz" represent 6
characters that encode the style of boundary for each of the 6
simulation box boundaries (xlo,xhi and ylo,yhi and zlo,zhi).  Each of
the 6 characters is either o = outflow, p = periodic, or s = specular.
See the "boundary"_doc/boundary.html command for details.

The "ITEM: ATOMS" line in each snapshot lists column descriptors for
the per-particle lines that follow.  The descriptors will be the
particle attributes you specify in the dump command for the {particle}
style.

Style {particle} allows you to specify a list of particle attributes
to be written to the dump file for each particle.  Possible attributes
are listed above and will appear in the order specified.  An
explanation of the possible dump particle attributes is given below.

:line

Dumps are performed on timesteps that are a multiple of N (including
timestep 0).  Note that this means a dump will not be performed on the
initial timestep after the dump command is invoked, if the current
timestep is not a multiple of N.  This behavior can be changed via the
"dump_modify first"_dump_modify.html command.  N can be changed
between runs by using the "dump_modify every"_dump_modify.html
command.

The specified filename determines how the dump file(s) is written.
The default is to write one large text file, which is opened when the
dump command is invoked and closed when an "undump"_undump.html
command is used or when DSMC exits.

Dump filenames can contain two wildcard characters.  If a "*"
character appears in the filename, then one file per snapshot is
written and the "*" character is replaced with the timestep value.
For example, tmp.dump.* becomes tmp.dump.0, tmp.dump.10000,
tmp.dump.20000, etc.  Note that the "dump_modify pad"_dump_modify.html
command can be used to insure all timestep numbers are the same length
(e.g. 00010), which can make it easier to read a series of dump files
in order by some post-processing tools.

If a "%" character appears in the filename, then one file is written
for each processor and the "%" character is replaced with the
processor ID from 0 to P-1.  For example, tmp.dump.% becomes
tmp.dump.0, tmp.dump.1, ... tmp.dump.P-1, etc.  This creates smaller
files and can be a fast mode of output on parallel machines that
support parallel I/O for output.

Note that the "*" and "%" characters can be used together to produce a
large number of small dump files!

If the filename ends with ".bin", the dump file (or files, if "*" or
"%" is also used) is written in binary format.  A binary dump file
will be about the same size as a text version, but will typically
write out much faster.  Of course, when post-processing, you will need
to convert it back to text format (see the "binary2txt
tool"_Section_tools.html#binary) or write your own code to read the
binary file.  The format of the binary file can be understood by
looking at the tools/binary2txt.cpp file.  This option is only
available for the {atom} and {custom} styles.

If the filename ends with ".gz", the dump file (or files, if "*" or "%"
is also used) is written in gzipped format.  A gzipped dump file will
be about 3x smaller than the text version, but will also take longer
to write.

:line

This section explains the particle attributes that can be specified as
part of the {particle} style.

The {id}, {type}, {vx}, {vy}, {vz} attributes are self-explanatory.

{Id} is the atom ID.  {Type} is an integer index representing the
particle species.  {Vx}, {vy}, {vz} are components of particle
velocity.

There are several options for outputting atom coordinates.  The {x},
{y}, {z} attributes write particle coordinates "unscaled", in the
appropriate distance "units"_units.html.  Use {xs}, {ys}, {zs} if you
want the coordinates "scaled" to the box size, so that each value is
0.0 to 1.0.

:line

[Restrictions:]

To write gzipped dump files, you must compile DSMC with the
-DDSMC_GZIP option - see the "Making DSMC"_Section_start.html#start_2
section of the documentation.

[Related commands:]

"dump image"_dump_image.html, "dump_modify"_dump_modify.html,
"undump"_undump.html

[Default:]

The defaults for the image style are listed on the "dump
image"_dump_image.html doc page.
